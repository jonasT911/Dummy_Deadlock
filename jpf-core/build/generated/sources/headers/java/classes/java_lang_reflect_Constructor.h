/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class java_lang_reflect_Constructor */

#ifndef _Included_java_lang_reflect_Constructor
#define _Included_java_lang_reflect_Constructor
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     java_lang_reflect_Constructor
 * Method:    getName
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_java_lang_reflect_Constructor_getName
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_reflect_Constructor
 * Method:    newInstance
 * Signature: ([Ljava/lang/Object;)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_java_lang_reflect_Constructor_newInstance
  (JNIEnv *, jobject, jobjectArray);

/*
 * Class:     java_lang_reflect_Constructor
 * Method:    getModifiers
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_java_lang_reflect_Constructor_getModifiers
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_reflect_Constructor
 * Method:    getReturnType
 * Signature: ()Ljava/lang/Class;
 */
JNIEXPORT jclass JNICALL Java_java_lang_reflect_Constructor_getReturnType
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_reflect_Constructor
 * Method:    getParameterTypes
 * Signature: ()[Ljava/lang/Class;
 */
JNIEXPORT jobjectArray JNICALL Java_java_lang_reflect_Constructor_getParameterTypes
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_reflect_Constructor
 * Method:    getDeclaringClass
 * Signature: ()Ljava/lang/Class;
 */
JNIEXPORT jclass JNICALL Java_java_lang_reflect_Constructor_getDeclaringClass
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_reflect_Constructor
 * Method:    getAnnotations
 * Signature: ()[Ljava/lang/annotation/Annotation;
 */
JNIEXPORT jobjectArray JNICALL Java_java_lang_reflect_Constructor_getAnnotations
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_reflect_Constructor
 * Method:    getDeclaredAnnotations
 * Signature: ()[Ljava/lang/annotation/Annotation;
 */
JNIEXPORT jobjectArray JNICALL Java_java_lang_reflect_Constructor_getDeclaredAnnotations
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_reflect_Constructor
 * Method:    getAnnotation
 * Signature: (Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
 */
JNIEXPORT jobject JNICALL Java_java_lang_reflect_Constructor_getAnnotation
  (JNIEnv *, jobject, jclass);

/*
 * Class:     java_lang_reflect_Constructor
 * Method:    getParameterAnnotations
 * Signature: ()[[Ljava/lang/annotation/Annotation;
 */
JNIEXPORT jobjectArray JNICALL Java_java_lang_reflect_Constructor_getParameterAnnotations
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_reflect_Constructor
 * Method:    toString
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_java_lang_reflect_Constructor_toString
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_reflect_Constructor
 * Method:    equals
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_java_lang_reflect_Constructor_equals
  (JNIEnv *, jobject, jobject);

/*
 * Class:     java_lang_reflect_Constructor
 * Method:    hashCode
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_java_lang_reflect_Constructor_hashCode
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_reflect_Constructor
 * Method:    toGenericString
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_java_lang_reflect_Constructor_toGenericString
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
