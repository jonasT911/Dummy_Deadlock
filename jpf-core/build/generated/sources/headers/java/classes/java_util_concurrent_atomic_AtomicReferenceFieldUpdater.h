/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class java_util_concurrent_atomic_AtomicReferenceFieldUpdater */

#ifndef _Included_java_util_concurrent_atomic_AtomicReferenceFieldUpdater
#define _Included_java_util_concurrent_atomic_AtomicReferenceFieldUpdater
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     java_util_concurrent_atomic_AtomicReferenceFieldUpdater
 * Method:    compareAndSet
 * Signature: (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_java_util_concurrent_atomic_AtomicReferenceFieldUpdater_compareAndSet
  (JNIEnv *, jobject, jobject, jobject, jobject);

/*
 * Class:     java_util_concurrent_atomic_AtomicReferenceFieldUpdater
 * Method:    get
 * Signature: (Ljava/lang/Object;)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_java_util_concurrent_atomic_AtomicReferenceFieldUpdater_get
  (JNIEnv *, jobject, jobject);

/*
 * Class:     java_util_concurrent_atomic_AtomicReferenceFieldUpdater
 * Method:    getAndSet
 * Signature: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_java_util_concurrent_atomic_AtomicReferenceFieldUpdater_getAndSet
  (JNIEnv *, jobject, jobject, jobject);

/*
 * Class:     java_util_concurrent_atomic_AtomicReferenceFieldUpdater
 * Method:    lazySet
 * Signature: (Ljava/lang/Object;Ljava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_java_util_concurrent_atomic_AtomicReferenceFieldUpdater_lazySet
  (JNIEnv *, jobject, jobject, jobject);

/*
 * Class:     java_util_concurrent_atomic_AtomicReferenceFieldUpdater
 * Method:    set
 * Signature: (Ljava/lang/Object;Ljava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_java_util_concurrent_atomic_AtomicReferenceFieldUpdater_set
  (JNIEnv *, jobject, jobject, jobject);

/*
 * Class:     java_util_concurrent_atomic_AtomicReferenceFieldUpdater
 * Method:    weakCompareAndSet
 * Signature: (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_java_util_concurrent_atomic_AtomicReferenceFieldUpdater_weakCompareAndSet
  (JNIEnv *, jobject, jobject, jobject, jobject);

#ifdef __cplusplus
}
#endif
#endif
